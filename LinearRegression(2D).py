# -*- coding: utf-8 -*-
"""Untitled57.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hI9I7y0wPzDOYIR1zjg7WWRvbIy8BIiE
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

#create data
x_n = 16

np.random.seed(seed=1)
x = 5+25 * np.random.rand(x_n)
x0 = x
x0_min = 5
x0_max = 30

prm_c = [170, 108, 0.2] # 생성 매개변수
t = prm_c[0] - prm_c[1] * np.exp(-prm_c[2]*x) + 4 *np.random.randn(x_n)

x1 = 23 * (t/100)**2 + 2*np.random.randn(x_n)
x1_min = 40
x1_max = 75

# show 2D data
def show_data2(ax, x0, x1, t):
    for i in range(len(x0)):
        ax.plot([x0[i],x0[i]], [x1[i], x1[i]], [120, t[i]], color='gray')
        ax.plot(x0, x1, t, 'o', color='cornflowerblue', markeredgecolor='black', markersize =6, markeredgewidth=0.5)
        #elev = elevation angle(양각), azim = azimuth angle(x,y plane angle)
        ax.view_init(elev=35, azim=-75)
    
#main
plt.figure(figsize=(6,5))
ax = plt.subplot(1,1,1, projection='3d')
show_data2(ax, x0, x1, t)
plt.show()

# show plane
def show_plane(ax, w):
    px0 = np.linspace(x0_min, x0_max, 5)
    px1 = np.linspace(x1_min, x1_max, 5)
    px0, px1 = np.meshgrid(px0, px1)
    y = w[0]*px0 + w[1]*px1 + w[2]
    ax.plot_surface(px0, px1, y, rstride = 1, cstride = 1, alpha=0.3, color = 'blue', edgecolor='black')

# plane mse
def mse_plane(x0, x1, t, w):
    y = w[0]*x0 + w[1]*x1 + w[2]
    mse = np.mean((y-t)**2)
    return mse

#main
plt.figure(figsize=(6,5))
ax = plt.subplot(1,1,1,projection='3d')
w = [1.5, 1, 90]
show_plane(ax, w)
show_data2(ax, x0, x1, t)
mse = mse_plane(x0, x1, t, w)
print("SD={0:.3f}cm".format(np.sqrt(mse)))
plt.show()

# analytic
def fit_plane(x0, x1, t):
    c_tx0 = np.mean(t*x0) - np.mean(t) * np.mean(x0)
    c_tx1 = np.mean(t*x1) - np.mean(t) * np.mean(x1)
    c_x0x1 = np.mean(x0 * x1) - np.mean(x0) * np.mean(x1)
    v_x0 = np.var(x0)
    v_x1 = np.var(x1)
    w0 = (c_tx1*c_x0x1 - v_x1*c_tx0) / (c_x0x1**2 - v_x0*v_x1)
    w1 = (c_tx0*c_x0x1 - v_x0*c_tx1) / (c_x0x1**2 - v_x0*v_x1)
    w2 = -w0 * np.mean(x0) - w1 * np.mean(x1) + np.mean(t)
    return np.array([w0,w1,w2])

# main
plt.figure(figsize = (6,5))
ax = plt.subplot(1,1,1,projection = '3d')
w = fit_plane(x0, x1, t)
print("w0={0:.1f}, w1={1:.1f}, w2={2:.1f},".format(w[0], w[1], w[2]))
show_plane(ax, w)
show_data2(ax, x0, x1, t)
mse = mse_plane(x0, x1, t, w)
print("SD={0:.3f}cm".format(np.sqrt(mse)))
plt.show()